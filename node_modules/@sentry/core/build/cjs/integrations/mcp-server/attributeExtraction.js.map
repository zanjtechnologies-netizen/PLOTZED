{"version":3,"file":"attributeExtraction.js","sources":["../../../../src/integrations/mcp-server/attributeExtraction.ts"],"sourcesContent":["/**\n * Core attribute extraction and building functions for MCP server instrumentation\n */\n\nimport { isURLObjectRelative, parseStringToURLObject } from '../../utils/url';\nimport {\n  MCP_LOGGING_DATA_TYPE_ATTRIBUTE,\n  MCP_LOGGING_LEVEL_ATTRIBUTE,\n  MCP_LOGGING_LOGGER_ATTRIBUTE,\n  MCP_LOGGING_MESSAGE_ATTRIBUTE,\n  MCP_REQUEST_ID_ATTRIBUTE,\n  MCP_RESOURCE_URI_ATTRIBUTE,\n} from './attributes';\nimport { extractTargetInfo, getRequestArguments } from './methodConfig';\nimport type { JsonRpcNotification, JsonRpcRequest, McpSpanType } from './types';\n\n/**\n * Extracts additional attributes for specific notification types\n * @param method - Notification method name\n * @param params - Notification parameters\n * @returns Method-specific attributes for span instrumentation\n */\nexport function getNotificationAttributes(\n  method: string,\n  params: Record<string, unknown>,\n): Record<string, string | number> {\n  const attributes: Record<string, string | number> = {};\n\n  switch (method) {\n    case 'notifications/cancelled':\n      if (params?.requestId) {\n        attributes['mcp.cancelled.request_id'] = String(params.requestId);\n      }\n      if (params?.reason) {\n        attributes['mcp.cancelled.reason'] = String(params.reason);\n      }\n      break;\n\n    case 'notifications/message':\n      if (params?.level) {\n        attributes[MCP_LOGGING_LEVEL_ATTRIBUTE] = String(params.level);\n      }\n      if (params?.logger) {\n        attributes[MCP_LOGGING_LOGGER_ATTRIBUTE] = String(params.logger);\n      }\n      if (params?.data !== undefined) {\n        attributes[MCP_LOGGING_DATA_TYPE_ATTRIBUTE] = typeof params.data;\n        if (typeof params.data === 'string') {\n          attributes[MCP_LOGGING_MESSAGE_ATTRIBUTE] = params.data;\n        } else {\n          attributes[MCP_LOGGING_MESSAGE_ATTRIBUTE] = JSON.stringify(params.data);\n        }\n      }\n      break;\n\n    case 'notifications/progress':\n      if (params?.progressToken) {\n        attributes['mcp.progress.token'] = String(params.progressToken);\n      }\n      if (typeof params?.progress === 'number') {\n        attributes['mcp.progress.current'] = params.progress;\n      }\n      if (typeof params?.total === 'number') {\n        attributes['mcp.progress.total'] = params.total;\n        if (typeof params?.progress === 'number') {\n          attributes['mcp.progress.percentage'] = (params.progress / params.total) * 100;\n        }\n      }\n      if (params?.message) {\n        attributes['mcp.progress.message'] = String(params.message);\n      }\n      break;\n\n    case 'notifications/resources/updated':\n      if (params?.uri) {\n        attributes[MCP_RESOURCE_URI_ATTRIBUTE] = String(params.uri);\n        const urlObject = parseStringToURLObject(String(params.uri));\n        if (urlObject && !isURLObjectRelative(urlObject)) {\n          attributes['mcp.resource.protocol'] = urlObject.protocol.replace(':', '');\n        }\n      }\n      break;\n\n    case 'notifications/initialized':\n      attributes['mcp.lifecycle.phase'] = 'initialization_complete';\n      attributes['mcp.protocol.ready'] = 1;\n      break;\n  }\n\n  return attributes;\n}\n\n/**\n * Build type-specific attributes based on message type\n * @param type - Span type (request or notification)\n * @param message - JSON-RPC message\n * @param params - Optional parameters for attribute extraction\n * @returns Type-specific attributes for span instrumentation\n */\nexport function buildTypeSpecificAttributes(\n  type: McpSpanType,\n  message: JsonRpcRequest | JsonRpcNotification,\n  params?: Record<string, unknown>,\n): Record<string, string | number> {\n  if (type === 'request') {\n    const request = message as JsonRpcRequest;\n    const targetInfo = extractTargetInfo(request.method, params || {});\n\n    return {\n      ...(request.id !== undefined && { [MCP_REQUEST_ID_ATTRIBUTE]: String(request.id) }),\n      ...targetInfo.attributes,\n      ...getRequestArguments(request.method, params || {}),\n    };\n  }\n\n  return getNotificationAttributes(message.method, params || {});\n}\n\n// Re-export buildTransportAttributes for spans.ts\nexport { buildTransportAttributes } from './sessionExtraction';\n"],"names":["attributes","MCP_LOGGING_LEVEL_ATTRIBUTE","MCP_LOGGING_LOGGER_ATTRIBUTE","MCP_LOGGING_DATA_TYPE_ATTRIBUTE","MCP_LOGGING_MESSAGE_ATTRIBUTE","MCP_RESOURCE_URI_ATTRIBUTE","parseStringToURLObject","isURLObjectRelative","extractTargetInfo","MCP_REQUEST_ID_ATTRIBUTE","getRequestArguments"],"mappings":"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"}