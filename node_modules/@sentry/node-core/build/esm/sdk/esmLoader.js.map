{"version":3,"file":"esmLoader.js","sources":["../../../src/sdk/esmLoader.ts"],"sourcesContent":["import { debug, GLOBAL_OBJ } from '@sentry/core';\nimport { createAddHookMessageChannel } from 'import-in-the-middle';\nimport * as moduleModule from 'module';\nimport { supportsEsmLoaderHooks } from '../utils/detection';\n\n/**\n * Initialize the ESM loader - This method is private and not part of the public\n * API.\n *\n * @ignore\n */\nexport function initializeEsmLoader(): void {\n  if (!supportsEsmLoaderHooks()) {\n    return;\n  }\n\n  if (!GLOBAL_OBJ._sentryEsmLoaderHookRegistered) {\n    GLOBAL_OBJ._sentryEsmLoaderHookRegistered = true;\n\n    try {\n      const { addHookMessagePort } = createAddHookMessageChannel();\n      // @ts-expect-error register is available in these versions\n      moduleModule.register('import-in-the-middle/hook.mjs', import.meta.url, {\n        data: { addHookMessagePort, include: [] },\n        transferList: [addHookMessagePort],\n      });\n    } catch (error) {\n      debug.warn(\"Failed to register 'import-in-the-middle' hook\", error);\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,mBAAmB,GAAS;AAC5C,EAAE,IAAI,CAAC,sBAAsB,EAAE,EAAE;AACjC,IAAI;AACJ;;AAEA,EAAE,IAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE;AAClD,IAAI,UAAU,CAAC,8BAAA,GAAiC,IAAI;;AAEpD,IAAI,IAAI;AACR,MAAM,MAAM,EAAE,kBAAA,KAAuB,2BAA2B,EAAE;AAClE;AACA,MAAM,YAAY,CAAC,QAAQ,CAAC,+BAA+B,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9E,QAAQ,IAAI,EAAE,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAAC,EAAG;AACjD,QAAQ,YAAY,EAAE,CAAC,kBAAkB,CAAC;AAC1C,OAAO,CAAC;AACR,KAAI,CAAE,OAAO,KAAK,EAAE;AACpB,MAAM,KAAK,CAAC,IAAI,CAAC,gDAAgD,EAAE,KAAK,CAAC;AACzE;AACA;AACA;;;;"}