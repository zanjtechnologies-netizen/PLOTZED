{"version":3,"file":"functions.js","sources":["../../../../../../../src/integrations/tracing/firebase/otel/patches/functions.ts"],"sourcesContent":["import type { Span, Tracer } from '@opentelemetry/api';\nimport { context, diag, SpanKind, trace } from '@opentelemetry/api';\nimport type { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport {\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type { SpanAttributes } from '@sentry/core';\nimport type { FirebaseInstrumentation } from '../firebaseInstrumentation';\nimport type {\n  AvailableFirebaseFunctions,\n  FirebaseFunctions,\n  FirebaseInstrumentationConfig,\n  OverloadedParameters,\n  RequestHook,\n  ResponseHook,\n} from '../types';\n\n/**\n * Patches Firebase Functions v2 to add OpenTelemetry instrumentation\n * @param tracer - Opentelemetry Tracer\n * @param functionsSupportedVersions - supported versions of firebase-functions\n * @param wrap - reference to native instrumentation wrap function\n * @param unwrap - reference to native instrumentation unwrap function\n * @param config - Firebase instrumentation config\n */\nexport function patchFunctions(\n  tracer: Tracer,\n  functionsSupportedVersions: string[],\n  wrap: InstrumentationBase['_wrap'],\n  unwrap: InstrumentationBase['_unwrap'],\n  config: FirebaseInstrumentationConfig,\n): InstrumentationNodeModuleDefinition {\n  let requestHook: RequestHook = () => {};\n  let responseHook: ResponseHook = () => {};\n  const errorHook = config.functions?.errorHook;\n  const configRequestHook = config.functions?.requestHook;\n  const configResponseHook = config.functions?.responseHook;\n\n  if (typeof configResponseHook === 'function') {\n    responseHook = (span: Span, err: unknown) => {\n      safeExecuteInTheMiddle(\n        () => configResponseHook(span, err),\n        error => {\n          if (!error) {\n            return;\n          }\n          diag.error(error?.message);\n        },\n        true,\n      );\n    };\n  }\n  if (typeof configRequestHook === 'function') {\n    requestHook = (span: Span) => {\n      safeExecuteInTheMiddle(\n        () => configRequestHook(span),\n        error => {\n          if (!error) {\n            return;\n          }\n          diag.error(error?.message);\n        },\n        true,\n      );\n    };\n  }\n\n  const moduleFunctionsCJS = new InstrumentationNodeModuleDefinition('firebase-functions', functionsSupportedVersions);\n  const modulesToInstrument = [\n    { name: 'firebase-functions/lib/v2/providers/https.js', triggerType: 'function' },\n    { name: 'firebase-functions/lib/v2/providers/firestore.js', triggerType: 'firestore' },\n    { name: 'firebase-functions/lib/v2/providers/scheduler.js', triggerType: 'scheduler' },\n    { name: 'firebase-functions/lib/v2/storage.js', triggerType: 'storage' },\n  ] as const;\n\n  modulesToInstrument.forEach(({ name, triggerType }) => {\n    moduleFunctionsCJS.files.push(\n      new InstrumentationNodeModuleFile(\n        name,\n        functionsSupportedVersions,\n        moduleExports =>\n          wrapCommonFunctions(\n            moduleExports,\n            wrap,\n            unwrap,\n            tracer,\n            { requestHook, responseHook, errorHook },\n            triggerType,\n          ),\n        moduleExports => unwrapCommonFunctions(moduleExports, unwrap),\n      ),\n    );\n  });\n\n  return moduleFunctionsCJS;\n}\n\n/**\n * Patches Cloud Functions for Firebase (v2) to add OpenTelemetry instrumentation\n *\n * @param tracer - Opentelemetry Tracer\n * @param functionsConfig - Firebase instrumentation config\n * @param triggerType - Type of trigger\n * @returns A function that patches the function\n */\nexport function patchV2Functions<T extends FirebaseFunctions = FirebaseFunctions>(\n  tracer: Tracer,\n  functionsConfig: FirebaseInstrumentationConfig['functions'],\n  triggerType: string,\n): (original: T) => (...args: OverloadedParameters<T>) => ReturnType<T> {\n  return function v2FunctionsWrapper(original: T): (...args: OverloadedParameters<T>) => ReturnType<T> {\n    return function (this: FirebaseInstrumentation, ...args: OverloadedParameters<T>): ReturnType<T> {\n      const handler = typeof args[0] === 'function' ? args[0] : args[1];\n      const documentOrOptions = typeof args[0] === 'function' ? undefined : args[0];\n\n      if (!handler) {\n        return original.call(this, ...args);\n      }\n\n      const wrappedHandler = async function (this: unknown, ...handlerArgs: unknown[]): Promise<unknown> {\n        const functionName = process.env.FUNCTION_TARGET || process.env.K_SERVICE || 'unknown';\n        const span = tracer.startSpan(`firebase.function.${triggerType}`, {\n          kind: SpanKind.SERVER,\n        });\n\n        const attributes: SpanAttributes = {\n          'faas.name': functionName,\n          'faas.trigger': triggerType,\n          'faas.provider': 'firebase',\n        };\n\n        if (process.env.GCLOUD_PROJECT) {\n          attributes['cloud.project_id'] = process.env.GCLOUD_PROJECT;\n        }\n\n        if (process.env.EVENTARC_CLOUD_EVENT_SOURCE) {\n          attributes['cloud.event_source'] = process.env.EVENTARC_CLOUD_EVENT_SOURCE;\n        }\n\n        span.setAttributes(attributes);\n        functionsConfig?.requestHook?.(span);\n\n        // Can be changed to safeExecuteInTheMiddleAsync once following is merged and released\n        // https://github.com/open-telemetry/opentelemetry-js/pull/6032\n        return context.with(trace.setSpan(context.active(), span), async () => {\n          let error: Error | undefined;\n          let result: T | undefined;\n\n          try {\n            result = await handler.apply(this, handlerArgs);\n          } catch (e) {\n            error = e as Error;\n          }\n\n          functionsConfig?.responseHook?.(span, error);\n\n          if (error) {\n            span.recordException(error);\n          }\n\n          span.end();\n\n          if (error) {\n            await functionsConfig?.errorHook?.(span, error);\n            throw error;\n          }\n\n          return result;\n        });\n      };\n\n      if (documentOrOptions) {\n        return original.call(this, documentOrOptions, wrappedHandler);\n      } else {\n        return original.call(this, wrappedHandler);\n      }\n    };\n  };\n}\n\nfunction wrapCommonFunctions(\n  moduleExports: AvailableFirebaseFunctions,\n  wrap: InstrumentationBase<FirebaseInstrumentationConfig>['_wrap'],\n  unwrap: InstrumentationBase<FirebaseInstrumentationConfig>['_unwrap'],\n  tracer: Tracer,\n  functionsConfig: FirebaseInstrumentationConfig['functions'],\n  triggerType: 'function' | 'firestore' | 'scheduler' | 'storage',\n): AvailableFirebaseFunctions {\n  unwrapCommonFunctions(moduleExports, unwrap);\n\n  switch (triggerType) {\n    case 'function':\n      wrap(moduleExports, 'onRequest', patchV2Functions(tracer, functionsConfig, 'http.request'));\n      wrap(moduleExports, 'onCall', patchV2Functions(tracer, functionsConfig, 'http.call'));\n      break;\n\n    case 'firestore':\n      wrap(moduleExports, 'onDocumentCreated', patchV2Functions(tracer, functionsConfig, 'firestore.document.created'));\n      wrap(moduleExports, 'onDocumentUpdated', patchV2Functions(tracer, functionsConfig, 'firestore.document.updated'));\n      wrap(moduleExports, 'onDocumentDeleted', patchV2Functions(tracer, functionsConfig, 'firestore.document.deleted'));\n      wrap(moduleExports, 'onDocumentWritten', patchV2Functions(tracer, functionsConfig, 'firestore.document.written'));\n      wrap(\n        moduleExports,\n        'onDocumentCreatedWithAuthContext',\n        patchV2Functions(tracer, functionsConfig, 'firestore.document.created'),\n      );\n      wrap(\n        moduleExports,\n        'onDocumentUpdatedWithAuthContext',\n        patchV2Functions(tracer, functionsConfig, 'firestore.document.updated'),\n      );\n\n      wrap(\n        moduleExports,\n        'onDocumentDeletedWithAuthContext',\n        patchV2Functions(tracer, functionsConfig, 'firestore.document.deleted'),\n      );\n\n      wrap(\n        moduleExports,\n        'onDocumentWrittenWithAuthContext',\n        patchV2Functions(tracer, functionsConfig, 'firestore.document.written'),\n      );\n      break;\n\n    case 'scheduler':\n      wrap(moduleExports, 'onSchedule', patchV2Functions(tracer, functionsConfig, 'scheduler.scheduled'));\n      break;\n\n    case 'storage':\n      wrap(moduleExports, 'onObjectFinalized', patchV2Functions(tracer, functionsConfig, 'storage.object.finalized'));\n      wrap(moduleExports, 'onObjectArchived', patchV2Functions(tracer, functionsConfig, 'storage.object.archived'));\n      wrap(moduleExports, 'onObjectDeleted', patchV2Functions(tracer, functionsConfig, 'storage.object.deleted'));\n      wrap(\n        moduleExports,\n        'onObjectMetadataUpdated',\n        patchV2Functions(tracer, functionsConfig, 'storage.object.metadataUpdated'),\n      );\n      break;\n  }\n\n  return moduleExports;\n}\n\nfunction unwrapCommonFunctions(\n  moduleExports: AvailableFirebaseFunctions,\n  unwrap: InstrumentationBase<FirebaseInstrumentationConfig>['_unwrap'],\n): AvailableFirebaseFunctions {\n  const methods: (keyof AvailableFirebaseFunctions)[] = [\n    'onSchedule',\n    'onRequest',\n    'onCall',\n    'onObjectFinalized',\n    'onObjectArchived',\n    'onObjectDeleted',\n    'onObjectMetadataUpdated',\n    'onDocumentCreated',\n    'onDocumentUpdated',\n    'onDocumentDeleted',\n    'onDocumentWritten',\n    'onDocumentCreatedWithAuthContext',\n    'onDocumentUpdatedWithAuthContext',\n    'onDocumentDeletedWithAuthContext',\n    'onDocumentWrittenWithAuthContext',\n  ];\n\n  for (const method of methods) {\n    if (isWrapped(moduleExports[method])) {\n      unwrap(moduleExports, method);\n    }\n  }\n  return moduleExports;\n}\n"],"names":[],"mappings":"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"}