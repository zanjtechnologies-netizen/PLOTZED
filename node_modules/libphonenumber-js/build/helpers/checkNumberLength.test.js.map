{"version":3,"file":"checkNumberLength.test.js","names":["_metadata2","_interopRequireDefault","require","_metadataMax","_metadataMin","_checkNumberLength","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","describe","it","expect","checkNumberLengthWithCountry","to","equal","undefined","checkNumberLengthWithoutCountry","_oldMetadata","Metadata","oldMetadata","country","checkNumberLengthForType","_metadata","metadata","checkNumberLength","number","type"],"sources":["../../source/helpers/checkNumberLength.test.js"],"sourcesContent":["import Metadata from '../metadata.js'\r\nimport metadata from '../../metadata.max.json' with { type: 'json' }\r\nimport oldMetadata from '../../test/metadata/1.0.0/metadata.min.json' with { type: 'json' }\r\n\r\nimport checkNumberLength, { checkNumberLengthForType } from './checkNumberLength.js'\r\n\r\ndescribe('checkNumberLength', () => {\r\n\tit('should check phone number length', () => {\r\n\t\t// Too short.\r\n\t\texpect(checkNumberLengthWithCountry('800555353', 'RU', 'FIXED_LINE')).to.equal('TOO_SHORT')\r\n\t\t// Normal.\r\n\t\texpect(checkNumberLengthWithCountry('8005553535', 'RU', 'FIXED_LINE')).to.equal('IS_POSSIBLE')\r\n\t\t// Too long.\r\n\t\texpect(checkNumberLengthWithCountry('80055535355', 'RU', 'FIXED_LINE')).to.equal('TOO_LONG')\r\n\r\n\t\t// No such type.\r\n\t\texpect(checkNumberLengthWithCountry('169454850', 'AC', 'VOIP')).to.equal('INVALID_LENGTH')\r\n\t\t// No such possible length.\r\n\t\texpect(checkNumberLengthWithCountry('1694548', 'AD', undefined)).to.equal('INVALID_LENGTH')\r\n\r\n\t\t// FIXED_LINE_OR_MOBILE\r\n\t\texpect(checkNumberLengthWithCountry('1694548', 'AD', 'FIXED_LINE_OR_MOBILE')).to.equal('INVALID_LENGTH')\r\n\t\t// No mobile phones.\r\n\t\texpect(checkNumberLengthWithCountry('8123', 'TA', 'FIXED_LINE_OR_MOBILE')).to.equal('IS_POSSIBLE')\r\n\t\t// No \"possible lengths\" for \"mobile\".\r\n\t\texpect(checkNumberLengthWithCountry('81234567', 'SZ', 'FIXED_LINE_OR_MOBILE')).to.equal('IS_POSSIBLE')\r\n\t})\r\n\r\n\tit('should check phone number length (no `country` specified)', () => {\r\n\t\t// Too short.\r\n\t\texpect(checkNumberLengthWithoutCountry('800555353', 'RU', 'FIXED_LINE')).to.equal('TOO_SHORT')\r\n\t\t// Normal.\r\n\t\texpect(checkNumberLengthWithoutCountry('8005553535', 'RU', 'FIXED_LINE')).to.equal('IS_POSSIBLE')\r\n\t\t// Too long.\r\n\t\texpect(checkNumberLengthWithoutCountry('80055535355', 'RU', 'FIXED_LINE')).to.equal('TOO_LONG')\r\n\r\n\t\t// No such type.\r\n\t\texpect(checkNumberLengthWithoutCountry('169454850', 'AC', 'VOIP')).to.equal('INVALID_LENGTH')\r\n\t\t// No such possible length.\r\n\t\texpect(checkNumberLengthWithoutCountry('1694548', 'AD', undefined)).to.equal('INVALID_LENGTH')\r\n\r\n\t\t// FIXED_LINE_OR_MOBILE\r\n\t\texpect(checkNumberLengthWithoutCountry('1694548', 'AD', 'FIXED_LINE_OR_MOBILE')).to.equal('INVALID_LENGTH')\r\n\t\t// No mobile phones.\r\n\t\texpect(checkNumberLengthWithoutCountry('8123', 'TA', 'FIXED_LINE_OR_MOBILE')).to.equal('IS_POSSIBLE')\r\n\t\t// No \"possible lengths\" for \"mobile\".\r\n\t\texpect(checkNumberLengthWithoutCountry('81234567', 'SZ', 'FIXED_LINE_OR_MOBILE')).to.equal('IS_POSSIBLE')\r\n\t})\r\n\r\n\tit('should work for old metadata', function() {\r\n\t\tconst _oldMetadata = new Metadata(oldMetadata)\r\n\t\t_oldMetadata.country('RU')\r\n\t\texpect(checkNumberLengthForType('8005553535', 'RU', 'FIXED_LINE', _oldMetadata)).to.equal('IS_POSSIBLE')\r\n\t})\r\n\r\n\tit('should work for old metadata (no `country` specified)', function() {\r\n\t\tconst _oldMetadata = new Metadata(oldMetadata)\r\n\t\t_oldMetadata.country('RU')\r\n\t\texpect(checkNumberLengthForType('8005553535', undefined, 'FIXED_LINE', _oldMetadata)).to.equal('IS_POSSIBLE')\r\n\t})\r\n\r\n\tit('should handle the cases when multiple countries share the same country calling code and a phone number is possible in non-\"main\" country and is not possible in the \"main\" country', () => {\r\n\t\tconst _metadata = new Metadata(metadata)\r\n\t\t_metadata.country('US')\r\n\r\n\t\texpect(checkNumberLength('3100000', undefined, _metadata)).to.equal('TOO_SHORT');\r\n\t\texpect(checkNumberLength('3100000', 'US', _metadata)).to.equal('TOO_SHORT');\r\n\t\texpect(checkNumberLength('3100000', 'CA', _metadata)).to.equal('IS_POSSIBLE');\r\n\t})\r\n})\r\n\r\nfunction checkNumberLengthWithCountry(number, country, type) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.country(country)\r\n\treturn checkNumberLengthForType(number, country, type, _metadata)\r\n}\r\n\r\nfunction checkNumberLengthWithoutCountry(number, country, type) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.country(country)\r\n\treturn checkNumberLengthForType(number, undefined, type, _metadata)\r\n}"],"mappings":"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","ignoreList":[]}