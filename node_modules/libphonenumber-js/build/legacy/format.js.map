{"version":3,"file":"format.js","names":["_format","_interopRequireDefault","require","_parse","_isObject","e","__esModule","formatNumber","_normalizeArguments","normalizeArguments","arguments","input","format","options","metadata","_formatNumber","args","arg_1","arg_2","arg_3","arg_4","arg_5","parse","defaultCountry","extended","Error","isObject","TypeError"],"sources":["../../source/legacy/format.js"],"sourcesContent":["import _formatNumber from '../format.js'\r\nimport parse from '../parse.js'\r\nimport isObject from '../helpers/isObject.js'\r\n\r\nexport default function formatNumber() {\r\n\tconst {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t} = normalizeArguments(arguments)\r\n\r\n\treturn _formatNumber(input, format, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nfunction normalizeArguments(args)\r\n{\r\n\t// This line of code appeared to not work correctly with `babel`/`istanbul`:\r\n\t// for some weird reason, it caused coverage less than 100%.\r\n\t// That's because `babel`/`istanbul`, for some weird reason,\r\n\t// apparently doesn't know how to properly exclude Babel polyfills from code coverage.\r\n\t//\r\n\t// const [arg_1, arg_2, arg_3, arg_4, arg_5] = Array.prototype.slice.call(args)\r\n\r\n\tconst arg_1 = args[0]\r\n\tconst arg_2 = args[1]\r\n\tconst arg_3 = args[2]\r\n\tconst arg_4 = args[3]\r\n\tconst arg_5 = args[4]\r\n\r\n\tlet input\r\n\tlet format\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// Sort out arguments.\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `format('8005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If country code is supplied.\r\n\t\t// `format('8005553535', 'RU', 'NATIONAL', [options], metadata)`.\r\n\t\tif (typeof arg_3 === 'string')\r\n\t\t{\r\n\t\t\tformat = arg_3\r\n\r\n\t\t\tif (arg_5)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_4\r\n\t\t\t\tmetadata = arg_5\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { defaultCountry: arg_2, extended: true }, metadata)\r\n\t\t}\r\n\t\t// Just an international phone number is supplied\r\n\t\t// `format('+78005553535', 'NATIONAL', [options], metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof arg_2 !== 'string')\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('`format` argument not passed to `formatNumber(number, format)`')\r\n\t\t\t}\r\n\r\n\t\t\tformat = arg_2\r\n\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { extended: true }, metadata)\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed number object.\r\n\t// `format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', [options], metadata)`.\r\n\telse if (isObject(arg_1))\r\n\t{\r\n\t\tinput  = arg_1\r\n\t\tformat = arg_2\r\n\r\n\t\tif (arg_4)\r\n\t\t{\r\n\t\t\toptions  = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t// Legacy lowercase formats.\r\n\tif (format === 'International') {\r\n\t\tformat = 'INTERNATIONAL'\r\n\t} else if (format === 'National') {\r\n\t\tformat = 'NATIONAL'\r\n\t}\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA6C,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAE9B,SAASE,YAAYA,CAAA,EAAG;EACtC,IAAAC,mBAAA,GAKIC,kBAAkB,CAACC,SAAS,CAAC;IAJhCC,KAAK,GAAAH,mBAAA,CAALG,KAAK;IACLC,MAAM,GAAAJ,mBAAA,CAANI,MAAM;IACNC,OAAO,GAAAL,mBAAA,CAAPK,OAAO;IACPC,QAAQ,GAAAN,mBAAA,CAARM,QAAQ;EAGT,OAAO,IAAAC,kBAAa,EAACJ,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;AACvD;;AAEA;AACA,SAASL,kBAAkBA,CAACO,IAAI,EAChC;EACC;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC;EACrB,IAAME,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAC;EACrB,IAAMG,KAAK,GAAGH,IAAI,CAAC,CAAC,CAAC;EACrB,IAAMI,KAAK,GAAGJ,IAAI,CAAC,CAAC,CAAC;EACrB,IAAMK,KAAK,GAAGL,IAAI,CAAC,CAAC,CAAC;EAErB,IAAIL,KAAK;EACT,IAAIC,MAAM;EACV,IAAIC,OAAO;EACX,IAAIC,QAAQ;;EAEZ;;EAEA;EACA;EACA,IAAI,OAAOG,KAAK,KAAK,QAAQ,EAC7B;IACC;IACA;IACA,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAC7B;MACCP,MAAM,GAAGO,KAAK;MAEd,IAAIE,KAAK,EACT;QACCR,OAAO,GAAIO,KAAK;QAChBN,QAAQ,GAAGO,KAAK;MACjB,CAAC,MAED;QACCP,QAAQ,GAAGM,KAAK;MACjB;MAEAT,KAAK,GAAG,IAAAW,iBAAK,EAACL,KAAK,EAAE;QAAEM,cAAc,EAAEL,KAAK;QAAEM,QAAQ,EAAE;MAAK,CAAC,EAAEV,QAAQ,CAAC;IAC1E;IACA;IACA;IAAA,KAEA;MACC,IAAI,OAAOI,KAAK,KAAK,QAAQ,EAC7B;QACC,MAAM,IAAIO,KAAK,CAAC,gEAAgE,CAAC;MAClF;MAEAb,MAAM,GAAGM,KAAK;MAEd,IAAIE,KAAK,EACT;QACCP,OAAO,GAAIM,KAAK;QAChBL,QAAQ,GAAGM,KAAK;MACjB,CAAC,MAED;QACCN,QAAQ,GAAGK,KAAK;MACjB;MAEAR,KAAK,GAAG,IAAAW,iBAAK,EAACL,KAAK,EAAE;QAAEO,QAAQ,EAAE;MAAK,CAAC,EAAEV,QAAQ,CAAC;IACnD;EACD;EACA;EACA;EAAA,KACK,IAAI,IAAAY,oBAAQ,EAACT,KAAK,CAAC,EACxB;IACCN,KAAK,GAAIM,KAAK;IACdL,MAAM,GAAGM,KAAK;IAEd,IAAIE,KAAK,EACT;MACCP,OAAO,GAAIM,KAAK;MAChBL,QAAQ,GAAGM,KAAK;IACjB,CAAC,MAED;MACCN,QAAQ,GAAGK,KAAK;IACjB;EACD,CAAC,MACI,MAAM,IAAIQ,SAAS,CAAC,oFAAoF,CAAC;;EAE9G;EACA,IAAIf,MAAM,KAAK,eAAe,EAAE;IAC/BA,MAAM,GAAG,eAAe;EACzB,CAAC,MAAM,IAAIA,MAAM,KAAK,UAAU,EAAE;IACjCA,MAAM,GAAG,UAAU;EACpB;EAEA,OAAO;IACND,KAAK,EAALA,KAAK;IACLC,MAAM,EAANA,MAAM;IACNC,OAAO,EAAPA,OAAO;IACPC,QAAQ,EAARA;EACD,CAAC;AACF","ignoreList":[]}